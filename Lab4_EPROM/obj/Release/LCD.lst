                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.6.0 #4309 (Jul 28 2006)
                              4 ; This file generated Sat Nov 12 16:45:53 2016
                              5 ;--------------------------------------------------------
                              6 	.module LCD
                              7 	.optsdcc -mmcs51 --model-large
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _ASCII_lookup
                             13 	.globl _AddrMap
                             14 	.globl _LCD_Addr
                             15 	.globl _LCD_DataWrite
                             16 	.globl _LCD_InstructionWrite
                             17 	.globl _P5_7
                             18 	.globl _P5_6
                             19 	.globl _P5_5
                             20 	.globl _P5_4
                             21 	.globl _P5_3
                             22 	.globl _P5_2
                             23 	.globl _P5_1
                             24 	.globl _P5_0
                             25 	.globl _P4_7
                             26 	.globl _P4_6
                             27 	.globl _P4_5
                             28 	.globl _P4_4
                             29 	.globl _P4_3
                             30 	.globl _P4_2
                             31 	.globl _P4_1
                             32 	.globl _P4_0
                             33 	.globl _PX0L
                             34 	.globl _PT0L
                             35 	.globl _PX1L
                             36 	.globl _PT1L
                             37 	.globl _PLS
                             38 	.globl _PT2L
                             39 	.globl _PPCL
                             40 	.globl _EC
                             41 	.globl _CCF0
                             42 	.globl _CCF1
                             43 	.globl _CCF2
                             44 	.globl _CCF3
                             45 	.globl _CCF4
                             46 	.globl _CR
                             47 	.globl _CF
                             48 	.globl _TF2
                             49 	.globl _EXF2
                             50 	.globl _RCLK
                             51 	.globl _TCLK
                             52 	.globl _EXEN2
                             53 	.globl _TR2
                             54 	.globl _C_T2
                             55 	.globl _CP_RL2
                             56 	.globl _T2CON_7
                             57 	.globl _T2CON_6
                             58 	.globl _T2CON_5
                             59 	.globl _T2CON_4
                             60 	.globl _T2CON_3
                             61 	.globl _T2CON_2
                             62 	.globl _T2CON_1
                             63 	.globl _T2CON_0
                             64 	.globl _PT2
                             65 	.globl _ET2
                             66 	.globl _CY
                             67 	.globl _AC
                             68 	.globl _F0
                             69 	.globl _RS1
                             70 	.globl _RS0
                             71 	.globl _OV
                             72 	.globl _F1
                             73 	.globl _P
                             74 	.globl _PS
                             75 	.globl _PT1
                             76 	.globl _PX1
                             77 	.globl _PT0
                             78 	.globl _PX0
                             79 	.globl _RD
                             80 	.globl _WR
                             81 	.globl _T1
                             82 	.globl _T0
                             83 	.globl _INT1
                             84 	.globl _INT0
                             85 	.globl _TXD
                             86 	.globl _RXD
                             87 	.globl _P3_7
                             88 	.globl _P3_6
                             89 	.globl _P3_5
                             90 	.globl _P3_4
                             91 	.globl _P3_3
                             92 	.globl _P3_2
                             93 	.globl _P3_1
                             94 	.globl _P3_0
                             95 	.globl _EA
                             96 	.globl _ES
                             97 	.globl _ET1
                             98 	.globl _EX1
                             99 	.globl _ET0
                            100 	.globl _EX0
                            101 	.globl _P2_7
                            102 	.globl _P2_6
                            103 	.globl _P2_5
                            104 	.globl _P2_4
                            105 	.globl _P2_3
                            106 	.globl _P2_2
                            107 	.globl _P2_1
                            108 	.globl _P2_0
                            109 	.globl _SM0
                            110 	.globl _SM1
                            111 	.globl _SM2
                            112 	.globl _REN
                            113 	.globl _TB8
                            114 	.globl _RB8
                            115 	.globl _TI
                            116 	.globl _RI
                            117 	.globl _P1_7
                            118 	.globl _P1_6
                            119 	.globl _P1_5
                            120 	.globl _P1_4
                            121 	.globl _P1_3
                            122 	.globl _P1_2
                            123 	.globl _P1_1
                            124 	.globl _P1_0
                            125 	.globl _TF1
                            126 	.globl _TR1
                            127 	.globl _TF0
                            128 	.globl _TR0
                            129 	.globl _IE1
                            130 	.globl _IT1
                            131 	.globl _IE0
                            132 	.globl _IT0
                            133 	.globl _P0_7
                            134 	.globl _P0_6
                            135 	.globl _P0_5
                            136 	.globl _P0_4
                            137 	.globl _P0_3
                            138 	.globl _P0_2
                            139 	.globl _P0_1
                            140 	.globl _P0_0
                            141 	.globl _EECON
                            142 	.globl _KBF
                            143 	.globl _KBE
                            144 	.globl _KBLS
                            145 	.globl _BRL
                            146 	.globl _BDRCON
                            147 	.globl _T2MOD
                            148 	.globl _SPDAT
                            149 	.globl _SPSTA
                            150 	.globl _SPCON
                            151 	.globl _SADEN
                            152 	.globl _SADDR
                            153 	.globl _WDTPRG
                            154 	.globl _WDTRST
                            155 	.globl _P5
                            156 	.globl _P4
                            157 	.globl _IPH1
                            158 	.globl _IPL1
                            159 	.globl _IPH0
                            160 	.globl _IPL0
                            161 	.globl _IEN1
                            162 	.globl _IEN0
                            163 	.globl _CMOD
                            164 	.globl _CL
                            165 	.globl _CH
                            166 	.globl _CCON
                            167 	.globl _CCAPM4
                            168 	.globl _CCAPM3
                            169 	.globl _CCAPM2
                            170 	.globl _CCAPM1
                            171 	.globl _CCAPM0
                            172 	.globl _CCAP4L
                            173 	.globl _CCAP3L
                            174 	.globl _CCAP2L
                            175 	.globl _CCAP1L
                            176 	.globl _CCAP0L
                            177 	.globl _CCAP4H
                            178 	.globl _CCAP3H
                            179 	.globl _CCAP2H
                            180 	.globl _CCAP1H
                            181 	.globl _CCAP0H
                            182 	.globl _CKCKON1
                            183 	.globl _CKCKON0
                            184 	.globl _CKRL
                            185 	.globl _AUXR1
                            186 	.globl _AUXR
                            187 	.globl _TH2
                            188 	.globl _TL2
                            189 	.globl _RCAP2H
                            190 	.globl _RCAP2L
                            191 	.globl _T2CON
                            192 	.globl _B
                            193 	.globl _ACC
                            194 	.globl _PSW
                            195 	.globl _IP
                            196 	.globl _P3
                            197 	.globl _IE
                            198 	.globl _P2
                            199 	.globl _SBUF
                            200 	.globl _SCON
                            201 	.globl _P1
                            202 	.globl _TH1
                            203 	.globl _TH0
                            204 	.globl _TL1
                            205 	.globl _TL0
                            206 	.globl _TMOD
                            207 	.globl _TCON
                            208 	.globl _PCON
                            209 	.globl _DPH
                            210 	.globl _DPL
                            211 	.globl _SP
                            212 	.globl _P0
                            213 	.globl _LCD_gotoxy_PARM_2
                            214 	.globl _LCD_SetCGRAMAddress
                            215 	.globl _LCD_SetDDRAMAddress
                            216 	.globl _LCD_ReadRAM
                            217 	.globl _LCD_Puthex
                            218 	.globl _LCD_Busywait
                            219 	.globl _LCD_ReadAddr
                            220 	.globl _LCD_ClearScreen
                            221 	.globl _LCD_gotoaddr
                            222 	.globl _LCD_gotoxy
                            223 	.globl _LCD_Putch
                            224 	.globl _LCD_Putstr
                            225 	.globl _LCD_Init
                            226 	.globl _LCD_Test
                            227 ;--------------------------------------------------------
                            228 ; special function registers
                            229 ;--------------------------------------------------------
                            230 	.area RSEG    (DATA)
                    0080    231 _P0	=	0x0080
                    0081    232 _SP	=	0x0081
                    0082    233 _DPL	=	0x0082
                    0083    234 _DPH	=	0x0083
                    0087    235 _PCON	=	0x0087
                    0088    236 _TCON	=	0x0088
                    0089    237 _TMOD	=	0x0089
                    008A    238 _TL0	=	0x008a
                    008B    239 _TL1	=	0x008b
                    008C    240 _TH0	=	0x008c
                    008D    241 _TH1	=	0x008d
                    0090    242 _P1	=	0x0090
                    0098    243 _SCON	=	0x0098
                    0099    244 _SBUF	=	0x0099
                    00A0    245 _P2	=	0x00a0
                    00A8    246 _IE	=	0x00a8
                    00B0    247 _P3	=	0x00b0
                    00B8    248 _IP	=	0x00b8
                    00D0    249 _PSW	=	0x00d0
                    00E0    250 _ACC	=	0x00e0
                    00F0    251 _B	=	0x00f0
                    00C8    252 _T2CON	=	0x00c8
                    00CA    253 _RCAP2L	=	0x00ca
                    00CB    254 _RCAP2H	=	0x00cb
                    00CC    255 _TL2	=	0x00cc
                    00CD    256 _TH2	=	0x00cd
                    008E    257 _AUXR	=	0x008e
                    00A2    258 _AUXR1	=	0x00a2
                    0097    259 _CKRL	=	0x0097
                    008F    260 _CKCKON0	=	0x008f
                    008F    261 _CKCKON1	=	0x008f
                    00FA    262 _CCAP0H	=	0x00fa
                    00FB    263 _CCAP1H	=	0x00fb
                    00FC    264 _CCAP2H	=	0x00fc
                    00FD    265 _CCAP3H	=	0x00fd
                    00FE    266 _CCAP4H	=	0x00fe
                    00EA    267 _CCAP0L	=	0x00ea
                    00EB    268 _CCAP1L	=	0x00eb
                    00EC    269 _CCAP2L	=	0x00ec
                    00ED    270 _CCAP3L	=	0x00ed
                    00EE    271 _CCAP4L	=	0x00ee
                    00DA    272 _CCAPM0	=	0x00da
                    00DB    273 _CCAPM1	=	0x00db
                    00DC    274 _CCAPM2	=	0x00dc
                    00DD    275 _CCAPM3	=	0x00dd
                    00DE    276 _CCAPM4	=	0x00de
                    00D8    277 _CCON	=	0x00d8
                    00F9    278 _CH	=	0x00f9
                    00E9    279 _CL	=	0x00e9
                    00D9    280 _CMOD	=	0x00d9
                    00A8    281 _IEN0	=	0x00a8
                    00B1    282 _IEN1	=	0x00b1
                    00B8    283 _IPL0	=	0x00b8
                    00B7    284 _IPH0	=	0x00b7
                    00B2    285 _IPL1	=	0x00b2
                    00B3    286 _IPH1	=	0x00b3
                    00C0    287 _P4	=	0x00c0
                    00D8    288 _P5	=	0x00d8
                    00A6    289 _WDTRST	=	0x00a6
                    00A7    290 _WDTPRG	=	0x00a7
                    00A9    291 _SADDR	=	0x00a9
                    00B9    292 _SADEN	=	0x00b9
                    00C3    293 _SPCON	=	0x00c3
                    00C4    294 _SPSTA	=	0x00c4
                    00C5    295 _SPDAT	=	0x00c5
                    00C9    296 _T2MOD	=	0x00c9
                    009B    297 _BDRCON	=	0x009b
                    009A    298 _BRL	=	0x009a
                    009C    299 _KBLS	=	0x009c
                    009D    300 _KBE	=	0x009d
                    009E    301 _KBF	=	0x009e
                    00D2    302 _EECON	=	0x00d2
                            303 ;--------------------------------------------------------
                            304 ; special function bits
                            305 ;--------------------------------------------------------
                            306 	.area RSEG    (DATA)
                    0080    307 _P0_0	=	0x0080
                    0081    308 _P0_1	=	0x0081
                    0082    309 _P0_2	=	0x0082
                    0083    310 _P0_3	=	0x0083
                    0084    311 _P0_4	=	0x0084
                    0085    312 _P0_5	=	0x0085
                    0086    313 _P0_6	=	0x0086
                    0087    314 _P0_7	=	0x0087
                    0088    315 _IT0	=	0x0088
                    0089    316 _IE0	=	0x0089
                    008A    317 _IT1	=	0x008a
                    008B    318 _IE1	=	0x008b
                    008C    319 _TR0	=	0x008c
                    008D    320 _TF0	=	0x008d
                    008E    321 _TR1	=	0x008e
                    008F    322 _TF1	=	0x008f
                    0090    323 _P1_0	=	0x0090
                    0091    324 _P1_1	=	0x0091
                    0092    325 _P1_2	=	0x0092
                    0093    326 _P1_3	=	0x0093
                    0094    327 _P1_4	=	0x0094
                    0095    328 _P1_5	=	0x0095
                    0096    329 _P1_6	=	0x0096
                    0097    330 _P1_7	=	0x0097
                    0098    331 _RI	=	0x0098
                    0099    332 _TI	=	0x0099
                    009A    333 _RB8	=	0x009a
                    009B    334 _TB8	=	0x009b
                    009C    335 _REN	=	0x009c
                    009D    336 _SM2	=	0x009d
                    009E    337 _SM1	=	0x009e
                    009F    338 _SM0	=	0x009f
                    00A0    339 _P2_0	=	0x00a0
                    00A1    340 _P2_1	=	0x00a1
                    00A2    341 _P2_2	=	0x00a2
                    00A3    342 _P2_3	=	0x00a3
                    00A4    343 _P2_4	=	0x00a4
                    00A5    344 _P2_5	=	0x00a5
                    00A6    345 _P2_6	=	0x00a6
                    00A7    346 _P2_7	=	0x00a7
                    00A8    347 _EX0	=	0x00a8
                    00A9    348 _ET0	=	0x00a9
                    00AA    349 _EX1	=	0x00aa
                    00AB    350 _ET1	=	0x00ab
                    00AC    351 _ES	=	0x00ac
                    00AF    352 _EA	=	0x00af
                    00B0    353 _P3_0	=	0x00b0
                    00B1    354 _P3_1	=	0x00b1
                    00B2    355 _P3_2	=	0x00b2
                    00B3    356 _P3_3	=	0x00b3
                    00B4    357 _P3_4	=	0x00b4
                    00B5    358 _P3_5	=	0x00b5
                    00B6    359 _P3_6	=	0x00b6
                    00B7    360 _P3_7	=	0x00b7
                    00B0    361 _RXD	=	0x00b0
                    00B1    362 _TXD	=	0x00b1
                    00B2    363 _INT0	=	0x00b2
                    00B3    364 _INT1	=	0x00b3
                    00B4    365 _T0	=	0x00b4
                    00B5    366 _T1	=	0x00b5
                    00B6    367 _WR	=	0x00b6
                    00B7    368 _RD	=	0x00b7
                    00B8    369 _PX0	=	0x00b8
                    00B9    370 _PT0	=	0x00b9
                    00BA    371 _PX1	=	0x00ba
                    00BB    372 _PT1	=	0x00bb
                    00BC    373 _PS	=	0x00bc
                    00D0    374 _P	=	0x00d0
                    00D1    375 _F1	=	0x00d1
                    00D2    376 _OV	=	0x00d2
                    00D3    377 _RS0	=	0x00d3
                    00D4    378 _RS1	=	0x00d4
                    00D5    379 _F0	=	0x00d5
                    00D6    380 _AC	=	0x00d6
                    00D7    381 _CY	=	0x00d7
                    00AD    382 _ET2	=	0x00ad
                    00BD    383 _PT2	=	0x00bd
                    00C8    384 _T2CON_0	=	0x00c8
                    00C9    385 _T2CON_1	=	0x00c9
                    00CA    386 _T2CON_2	=	0x00ca
                    00CB    387 _T2CON_3	=	0x00cb
                    00CC    388 _T2CON_4	=	0x00cc
                    00CD    389 _T2CON_5	=	0x00cd
                    00CE    390 _T2CON_6	=	0x00ce
                    00CF    391 _T2CON_7	=	0x00cf
                    00C8    392 _CP_RL2	=	0x00c8
                    00C9    393 _C_T2	=	0x00c9
                    00CA    394 _TR2	=	0x00ca
                    00CB    395 _EXEN2	=	0x00cb
                    00CC    396 _TCLK	=	0x00cc
                    00CD    397 _RCLK	=	0x00cd
                    00CE    398 _EXF2	=	0x00ce
                    00CF    399 _TF2	=	0x00cf
                    00DF    400 _CF	=	0x00df
                    00DE    401 _CR	=	0x00de
                    00DC    402 _CCF4	=	0x00dc
                    00DB    403 _CCF3	=	0x00db
                    00DA    404 _CCF2	=	0x00da
                    00D9    405 _CCF1	=	0x00d9
                    00D8    406 _CCF0	=	0x00d8
                    00AE    407 _EC	=	0x00ae
                    00BE    408 _PPCL	=	0x00be
                    00BD    409 _PT2L	=	0x00bd
                    00BC    410 _PLS	=	0x00bc
                    00BB    411 _PT1L	=	0x00bb
                    00BA    412 _PX1L	=	0x00ba
                    00B9    413 _PT0L	=	0x00b9
                    00B8    414 _PX0L	=	0x00b8
                    00C0    415 _P4_0	=	0x00c0
                    00C1    416 _P4_1	=	0x00c1
                    00C2    417 _P4_2	=	0x00c2
                    00C3    418 _P4_3	=	0x00c3
                    00C4    419 _P4_4	=	0x00c4
                    00C5    420 _P4_5	=	0x00c5
                    00C6    421 _P4_6	=	0x00c6
                    00C7    422 _P4_7	=	0x00c7
                    00D8    423 _P5_0	=	0x00d8
                    00D9    424 _P5_1	=	0x00d9
                    00DA    425 _P5_2	=	0x00da
                    00DB    426 _P5_3	=	0x00db
                    00DC    427 _P5_4	=	0x00dc
                    00DD    428 _P5_5	=	0x00dd
                    00DE    429 _P5_6	=	0x00de
                    00DF    430 _P5_7	=	0x00df
                            431 ;--------------------------------------------------------
                            432 ; overlayable register banks
                            433 ;--------------------------------------------------------
                            434 	.area REG_BANK_0	(REL,OVR,DATA)
   0000                     435 	.ds 8
                            436 ;--------------------------------------------------------
                            437 ; internal ram data
                            438 ;--------------------------------------------------------
                            439 	.area DSEG    (DATA)
                            440 ;--------------------------------------------------------
                            441 ; overlayable items in internal ram 
                            442 ;--------------------------------------------------------
                            443 	.area OSEG    (OVR,DATA)
                            444 ;--------------------------------------------------------
                            445 ; indirectly addressable internal ram data
                            446 ;--------------------------------------------------------
                            447 	.area ISEG    (DATA)
                            448 ;--------------------------------------------------------
                            449 ; bit data
                            450 ;--------------------------------------------------------
                            451 	.area BSEG    (BIT)
                            452 ;--------------------------------------------------------
                            453 ; paged external ram data
                            454 ;--------------------------------------------------------
                            455 	.area PSEG    (PAG,XDATA)
                            456 ;--------------------------------------------------------
                            457 ; external ram data
                            458 ;--------------------------------------------------------
                            459 	.area XSEG    (XDATA)
   0000                     460 _LCD_InstructionWrite_instruction_1_1:
   0000                     461 	.ds 1
   0001                     462 _LCD_DataWrite_Data_1_1:
   0001                     463 	.ds 1
   0002                     464 _LCD_SetCGRAMAddress_address_1_1:
   0002                     465 	.ds 1
   0003                     466 _LCD_SetDDRAMAddress_address_1_1:
   0003                     467 	.ds 1
   0004                     468 _LCD_Puthex_c_1_1:
   0004                     469 	.ds 1
   0005                     470 _LCD_gotoaddr_addr_1_1:
   0005                     471 	.ds 1
   0006                     472 _LCD_gotoxy_PARM_2:
   0006                     473 	.ds 1
   0007                     474 _LCD_gotoxy_row_1_1:
   0007                     475 	.ds 1
   0008                     476 _LCD_Putch_cc_1_1:
   0008                     477 	.ds 1
   0009                     478 _LCD_Putstr_ss_1_1:
   0009                     479 	.ds 3
                            480 ;--------------------------------------------------------
                            481 ; external initialized ram data
                            482 ;--------------------------------------------------------
                            483 	.area XISEG   (XDATA)
                            484 	.area HOME    (CODE)
                            485 	.area GSINIT0 (CODE)
                            486 	.area GSINIT1 (CODE)
                            487 	.area GSINIT2 (CODE)
                            488 	.area GSINIT3 (CODE)
                            489 	.area GSINIT4 (CODE)
                            490 	.area GSINIT5 (CODE)
                            491 	.area GSINIT  (CODE)
                            492 	.area GSFINAL (CODE)
                            493 	.area CSEG    (CODE)
                            494 ;--------------------------------------------------------
                            495 ; global & static initialisations
                            496 ;--------------------------------------------------------
                            497 	.area HOME    (CODE)
                            498 	.area GSINIT  (CODE)
                            499 	.area GSFINAL (CODE)
                            500 	.area GSINIT  (CODE)
                            501 ;--------------------------------------------------------
                            502 ; Home
                            503 ;--------------------------------------------------------
                            504 	.area HOME    (CODE)
                            505 	.area CSEG    (CODE)
                            506 ;--------------------------------------------------------
                            507 ; code
                            508 ;--------------------------------------------------------
                            509 	.area CSEG    (CODE)
                            510 ;------------------------------------------------------------
                            511 ;Allocation info for local variables in function 'LCD_InstructionWrite'
                            512 ;------------------------------------------------------------
                            513 ;instruction               Allocated with name '_LCD_InstructionWrite_instruction_1_1'
                            514 ;------------------------------------------------------------
                            515 ;	LCD.c:38: void LCD_InstructionWrite(uint8_t instruction){
                            516 ;	-----------------------------------------
                            517 ;	 function LCD_InstructionWrite
                            518 ;	-----------------------------------------
   0000                     519 _LCD_InstructionWrite:
                    0002    520 	ar2 = 0x02
                    0003    521 	ar3 = 0x03
                    0004    522 	ar4 = 0x04
                    0005    523 	ar5 = 0x05
                    0006    524 	ar6 = 0x06
                    0007    525 	ar7 = 0x07
                    0000    526 	ar0 = 0x00
                    0001    527 	ar1 = 0x01
                            528 ;	genReceive
   0000 E5 82               529 	mov	a,dpl
   0002 90s00r00            530 	mov	dptr,#_LCD_InstructionWrite_instruction_1_1
   0005 F0                  531 	movx	@dptr,a
                            532 ;	LCD.c:39: RW = WRITE;
                            533 ;	genAssign
   0006 C2 94               534 	clr	_P1_4
                            535 ;	LCD.c:40: RS = INSTRUCTION;
                            536 ;	genAssign
   0008 C2 95               537 	clr	_P1_5
                            538 ;	LCD.c:41: *LCD_Addr = instruction;
                            539 ;	genAssign
   000A 90s00r00            540 	mov	dptr,#_LCD_Addr
   000D E4                  541 	clr	a
   000E 93                  542 	movc	a,@a+dptr
   000F FA                  543 	mov	r2,a
   0010 74 01               544 	mov	a,#0x01
   0012 93                  545 	movc	a,@a+dptr
   0013 FB                  546 	mov	r3,a
                            547 ;	genAssign
   0014 90s00r00            548 	mov	dptr,#_LCD_InstructionWrite_instruction_1_1
   0017 E0                  549 	movx	a,@dptr
                            550 ;	genPointerSet
                            551 ;     genFarPointerSet
   0018 FC                  552 	mov	r4,a
   0019 8A 82               553 	mov	dpl,r2
   001B 8B 83               554 	mov	dph,r3
                            555 ;	Peephole 136	removed redundant move
   001D F0                  556 	movx	@dptr,a
                            557 ;	Peephole 300	removed redundant label 00101$
   001E 22                  558 	ret
                            559 ;------------------------------------------------------------
                            560 ;Allocation info for local variables in function 'LCD_DataWrite'
                            561 ;------------------------------------------------------------
                            562 ;Data                      Allocated with name '_LCD_DataWrite_Data_1_1'
                            563 ;------------------------------------------------------------
                            564 ;	LCD.c:47: void LCD_DataWrite(uint8_t Data){
                            565 ;	-----------------------------------------
                            566 ;	 function LCD_DataWrite
                            567 ;	-----------------------------------------
   001F                     568 _LCD_DataWrite:
                            569 ;	genReceive
   001F E5 82               570 	mov	a,dpl
   0021 90s00r01            571 	mov	dptr,#_LCD_DataWrite_Data_1_1
   0024 F0                  572 	movx	@dptr,a
                            573 ;	LCD.c:48: RW = WRITE;
                            574 ;	genAssign
   0025 C2 94               575 	clr	_P1_4
                            576 ;	LCD.c:49: RS = DATA;
                            577 ;	genAssign
   0027 D2 95               578 	setb	_P1_5
                            579 ;	LCD.c:50: *LCD_Addr = Data;
                            580 ;	genAssign
   0029 90s00r00            581 	mov	dptr,#_LCD_Addr
   002C E4                  582 	clr	a
   002D 93                  583 	movc	a,@a+dptr
   002E FA                  584 	mov	r2,a
   002F 74 01               585 	mov	a,#0x01
   0031 93                  586 	movc	a,@a+dptr
   0032 FB                  587 	mov	r3,a
                            588 ;	genAssign
   0033 90s00r01            589 	mov	dptr,#_LCD_DataWrite_Data_1_1
   0036 E0                  590 	movx	a,@dptr
                            591 ;	genPointerSet
                            592 ;     genFarPointerSet
   0037 FC                  593 	mov	r4,a
   0038 8A 82               594 	mov	dpl,r2
   003A 8B 83               595 	mov	dph,r3
                            596 ;	Peephole 136	removed redundant move
   003C F0                  597 	movx	@dptr,a
                            598 ;	Peephole 300	removed redundant label 00101$
   003D 22                  599 	ret
                            600 ;------------------------------------------------------------
                            601 ;Allocation info for local variables in function 'LCD_SetCGRAMAddress'
                            602 ;------------------------------------------------------------
                            603 ;address                   Allocated with name '_LCD_SetCGRAMAddress_address_1_1'
                            604 ;------------------------------------------------------------
                            605 ;	LCD.c:56: void LCD_SetCGRAMAddress(uint8_t address){
                            606 ;	-----------------------------------------
                            607 ;	 function LCD_SetCGRAMAddress
                            608 ;	-----------------------------------------
   003E                     609 _LCD_SetCGRAMAddress:
                            610 ;	genReceive
   003E E5 82               611 	mov	a,dpl
   0040 90s00r02            612 	mov	dptr,#_LCD_SetCGRAMAddress_address_1_1
   0043 F0                  613 	movx	@dptr,a
                            614 ;	LCD.c:57: LCD_Busywait();
                            615 ;	genCall
   0044 12s00rC9            616 	lcall	_LCD_Busywait
                            617 ;	LCD.c:58: address = address & 0xC0;   //mask off top two bits
                            618 ;	genAssign
                            619 ;	genAnd
   0047 90s00r02            620 	mov	dptr,#_LCD_SetCGRAMAddress_address_1_1
   004A E0                  621 	movx	a,@dptr
   004B FA                  622 	mov	r2,a
                            623 ;	Peephole 248.b	optimized and to xdata
   004C 54 C0               624 	anl	a,#0xC0
   004E F0                  625 	movx	@dptr,a
                            626 ;	LCD.c:59: LCD_InstructionWrite(address | 0x40);
                            627 ;	genAssign
   004F 90s00r02            628 	mov	dptr,#_LCD_SetCGRAMAddress_address_1_1
   0052 E0                  629 	movx	a,@dptr
   0053 FA                  630 	mov	r2,a
                            631 ;	genOr
   0054 43 02 40            632 	orl	ar2,#0x40
                            633 ;	genCall
   0057 8A 82               634 	mov	dpl,r2
                            635 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0059 02s00r00            636 	ljmp	_LCD_InstructionWrite
                            637 ;
                            638 ;------------------------------------------------------------
                            639 ;Allocation info for local variables in function 'LCD_SetDDRAMAddress'
                            640 ;------------------------------------------------------------
                            641 ;address                   Allocated with name '_LCD_SetDDRAMAddress_address_1_1'
                            642 ;------------------------------------------------------------
                            643 ;	LCD.c:65: void LCD_SetDDRAMAddress(uint8_t address){
                            644 ;	-----------------------------------------
                            645 ;	 function LCD_SetDDRAMAddress
                            646 ;	-----------------------------------------
   005C                     647 _LCD_SetDDRAMAddress:
                            648 ;	genReceive
   005C E5 82               649 	mov	a,dpl
   005E 90s00r03            650 	mov	dptr,#_LCD_SetDDRAMAddress_address_1_1
   0061 F0                  651 	movx	@dptr,a
                            652 ;	LCD.c:66: LCD_Busywait();
                            653 ;	genCall
   0062 12s00rC9            654 	lcall	_LCD_Busywait
                            655 ;	LCD.c:67: address = address | 0x80;   //mask off top bit
                            656 ;	genAssign
                            657 ;	genOr
   0065 90s00r03            658 	mov	dptr,#_LCD_SetDDRAMAddress_address_1_1
   0068 E0                  659 	movx	a,@dptr
   0069 FA                  660 	mov	r2,a
                            661 ;	Peephole 248.a	optimized or to xdata
   006A 44 80               662 	orl	a,#0x80
   006C F0                  663 	movx	@dptr,a
                            664 ;	LCD.c:68: LCD_InstructionWrite(address);
                            665 ;	genAssign
   006D 90s00r03            666 	mov	dptr,#_LCD_SetDDRAMAddress_address_1_1
   0070 E0                  667 	movx	a,@dptr
                            668 ;	genCall
   0071 FA                  669 	mov	r2,a
                            670 ;	Peephole 244.c	loading dpl from a instead of r2
   0072 F5 82               671 	mov	dpl,a
                            672 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0074 02s00r00            673 	ljmp	_LCD_InstructionWrite
                            674 ;
                            675 ;------------------------------------------------------------
                            676 ;Allocation info for local variables in function 'LCD_ReadRAM'
                            677 ;------------------------------------------------------------
                            678 ;------------------------------------------------------------
                            679 ;	LCD.c:75: uint8_t LCD_ReadRAM(void){
                            680 ;	-----------------------------------------
                            681 ;	 function LCD_ReadRAM
                            682 ;	-----------------------------------------
   0077                     683 _LCD_ReadRAM:
                            684 ;	LCD.c:76: LCD_Busywait();
                            685 ;	genCall
   0077 12s00rC9            686 	lcall	_LCD_Busywait
                            687 ;	LCD.c:77: RW = READ;
                            688 ;	genAssign
   007A D2 94               689 	setb	_P1_4
                            690 ;	LCD.c:78: RS = DATA;
                            691 ;	genAssign
   007C D2 95               692 	setb	_P1_5
                            693 ;	LCD.c:79: return *LCD_Addr;
                            694 ;	genAssign
   007E 90s00r00            695 	mov	dptr,#_LCD_Addr
   0081 E4                  696 	clr	a
   0082 93                  697 	movc	a,@a+dptr
   0083 FA                  698 	mov	r2,a
   0084 74 01               699 	mov	a,#0x01
   0086 93                  700 	movc	a,@a+dptr
   0087 FB                  701 	mov	r3,a
                            702 ;	genPointerGet
                            703 ;	genFarPointerGet
   0088 8A 82               704 	mov	dpl,r2
   008A 8B 83               705 	mov	dph,r3
   008C E0                  706 	movx	a,@dptr
                            707 ;	genRet
                            708 ;	Peephole 234.a	loading dpl directly from a(ccumulator), r2 not set
   008D F5 82               709 	mov	dpl,a
                            710 ;	Peephole 300	removed redundant label 00101$
   008F 22                  711 	ret
                            712 ;------------------------------------------------------------
                            713 ;Allocation info for local variables in function 'LCD_Puthex'
                            714 ;------------------------------------------------------------
                            715 ;c                         Allocated with name '_LCD_Puthex_c_1_1'
                            716 ;------------------------------------------------------------
                            717 ;	LCD.c:87: void LCD_Puthex(char c){
                            718 ;	-----------------------------------------
                            719 ;	 function LCD_Puthex
                            720 ;	-----------------------------------------
   0090                     721 _LCD_Puthex:
                            722 ;	genReceive
   0090 E5 82               723 	mov	a,dpl
   0092 90s00r04            724 	mov	dptr,#_LCD_Puthex_c_1_1
   0095 F0                  725 	movx	@dptr,a
                            726 ;	LCD.c:88: LCD_Putch(ASCII_lookup[(c & 0xF0) >> 4]); //High nibble
                            727 ;	genAssign
   0096 90s00r04            728 	mov	dptr,#_LCD_Puthex_c_1_1
   0099 E0                  729 	movx	a,@dptr
   009A FA                  730 	mov	r2,a
                            731 ;	genAnd
   009B 74 F0               732 	mov	a,#0xF0
   009D 5A                  733 	anl	a,r2
                            734 ;	genRightShift
                            735 ;	genRightShiftLiteral
                            736 ;	genrshOne
   009E FB                  737 	mov	r3,a
                            738 ;	Peephole 105	removed redundant mov
   009F C4                  739 	swap	a
   00A0 54 0F               740 	anl	a,#0x0f
                            741 ;	genLeftShift
                            742 ;	genLeftShiftLiteral
                            743 ;	genlshOne
                            744 ;	Peephole 105	removed redundant mov
                            745 ;	genPlus
                            746 ;	Peephole 204	removed redundant mov
   00A2 25 E0               747 	add	a,acc
                            748 ;	Peephole 177.b	removed redundant mov
                            749 ;	Peephole 181	changed mov to clr
                            750 ;	genPointerGet
                            751 ;	genCodePointerGet
                            752 ;	Peephole 186.c	optimized movc sequence
                            753 ;	Peephole 177.c	removed redundant move
   00A4 FB                  754 	mov	r3,a
   00A5 90s00r42            755 	mov	dptr,#_ASCII_lookup
   00A8 93                  756 	movc	a,@a+dptr
   00A9 CB                  757 	xch	a,r3
   00AA A3                  758 	inc	dptr
   00AB 93                  759 	movc	a,@a+dptr
   00AC FC                  760 	mov	r4,a
                            761 ;	genCast
                            762 ;	genCall
   00AD 8B 82               763 	mov	dpl,r3
   00AF C0 02               764 	push	ar2
   00B1 12s01r6A            765 	lcall	_LCD_Putch
   00B4 D0 02               766 	pop	ar2
                            767 ;	LCD.c:89: LCD_Putch(ASCII_lookup[c & 0x0F]); //Low nibble
                            768 ;	genAnd
   00B6 53 02 0F            769 	anl	ar2,#0x0F
                            770 ;	genLeftShift
                            771 ;	genLeftShiftLiteral
                            772 ;	genlshOne
   00B9 EA                  773 	mov	a,r2
                            774 ;	Peephole 254	optimized left shift
   00BA 2A                  775 	add	a,r2
                            776 ;	genPlus
                            777 ;	Peephole 177.b	removed redundant mov
                            778 ;	Peephole 181	changed mov to clr
                            779 ;	genPointerGet
                            780 ;	genCodePointerGet
                            781 ;	Peephole 186.c	optimized movc sequence
                            782 ;	Peephole 177.c	removed redundant move
   00BB FA                  783 	mov	r2,a
   00BC 90s00r42            784 	mov	dptr,#_ASCII_lookup
   00BF 93                  785 	movc	a,@a+dptr
   00C0 CA                  786 	xch	a,r2
   00C1 A3                  787 	inc	dptr
   00C2 93                  788 	movc	a,@a+dptr
   00C3 FB                  789 	mov	r3,a
                            790 ;	genCast
                            791 ;	genCall
   00C4 8A 82               792 	mov	dpl,r2
                            793 ;	Peephole 253.b	replaced lcall/ret with ljmp
   00C6 02s01r6A            794 	ljmp	_LCD_Putch
                            795 ;
                            796 ;------------------------------------------------------------
                            797 ;Allocation info for local variables in function 'LCD_Busywait'
                            798 ;------------------------------------------------------------
                            799 ;------------------------------------------------------------
                            800 ;	LCD.c:97: void LCD_Busywait(void){
                            801 ;	-----------------------------------------
                            802 ;	 function LCD_Busywait
                            803 ;	-----------------------------------------
   00C9                     804 _LCD_Busywait:
                            805 ;	LCD.c:98: RW = READ;
                            806 ;	genAssign
   00C9 D2 94               807 	setb	_P1_4
                            808 ;	LCD.c:99: RS = INSTRUCTION;
                            809 ;	genAssign
   00CB C2 95               810 	clr	_P1_5
                            811 ;	LCD.c:100: while (*LCD_Addr & 0x80){}
   00CD                     812 00101$:
                            813 ;	genAssign
   00CD 90s00r00            814 	mov	dptr,#_LCD_Addr
   00D0 E4                  815 	clr	a
   00D1 93                  816 	movc	a,@a+dptr
   00D2 FA                  817 	mov	r2,a
   00D3 74 01               818 	mov	a,#0x01
   00D5 93                  819 	movc	a,@a+dptr
   00D6 FB                  820 	mov	r3,a
                            821 ;	genPointerGet
                            822 ;	genFarPointerGet
   00D7 8A 82               823 	mov	dpl,r2
   00D9 8B 83               824 	mov	dph,r3
   00DB E0                  825 	movx	a,@dptr
                            826 ;	genAnd
   00DC FA                  827 	mov	r2,a
                            828 ;	Peephole 105	removed redundant mov
                            829 ;	genIfxJump
                            830 ;	Peephole 108.e	removed ljmp by inverse jump logic
   00DD 20 E7 ED            831 	jb	acc.7,00101$
                            832 ;	Peephole 300	removed redundant label 00107$
                            833 ;	Peephole 300	removed redundant label 00104$
   00E0 22                  834 	ret
                            835 ;------------------------------------------------------------
                            836 ;Allocation info for local variables in function 'LCD_ReadAddr'
                            837 ;------------------------------------------------------------
                            838 ;------------------------------------------------------------
                            839 ;	LCD.c:106: uint8_t LCD_ReadAddr(void){
                            840 ;	-----------------------------------------
                            841 ;	 function LCD_ReadAddr
                            842 ;	-----------------------------------------
   00E1                     843 _LCD_ReadAddr:
                            844 ;	LCD.c:107: LCD_Busywait();
                            845 ;	genCall
   00E1 12s00rC9            846 	lcall	_LCD_Busywait
                            847 ;	LCD.c:108: RW = READ;
                            848 ;	genAssign
   00E4 D2 94               849 	setb	_P1_4
                            850 ;	LCD.c:109: RS = INSTRUCTION;
                            851 ;	genAssign
   00E6 C2 95               852 	clr	_P1_5
                            853 ;	LCD.c:110: return *LCD_Addr & 0x7F;    //Only lower 7 bits are address
                            854 ;	genAssign
   00E8 90s00r00            855 	mov	dptr,#_LCD_Addr
   00EB E4                  856 	clr	a
   00EC 93                  857 	movc	a,@a+dptr
   00ED FA                  858 	mov	r2,a
   00EE 74 01               859 	mov	a,#0x01
   00F0 93                  860 	movc	a,@a+dptr
   00F1 FB                  861 	mov	r3,a
                            862 ;	genPointerGet
                            863 ;	genFarPointerGet
   00F2 8A 82               864 	mov	dpl,r2
   00F4 8B 83               865 	mov	dph,r3
   00F6 E0                  866 	movx	a,@dptr
   00F7 FA                  867 	mov	r2,a
                            868 ;	genAnd
   00F8 53 02 7F            869 	anl	ar2,#0x7F
                            870 ;	genRet
   00FB 8A 82               871 	mov	dpl,r2
                            872 ;	Peephole 300	removed redundant label 00101$
   00FD 22                  873 	ret
                            874 ;------------------------------------------------------------
                            875 ;Allocation info for local variables in function 'LCD_ClearScreen'
                            876 ;------------------------------------------------------------
                            877 ;------------------------------------------------------------
                            878 ;	LCD.c:116: void LCD_ClearScreen(void){
                            879 ;	-----------------------------------------
                            880 ;	 function LCD_ClearScreen
                            881 ;	-----------------------------------------
   00FE                     882 _LCD_ClearScreen:
                            883 ;	LCD.c:117: LCD_Busywait();
                            884 ;	genCall
   00FE 12s00rC9            885 	lcall	_LCD_Busywait
                            886 ;	LCD.c:118: LCD_InstructionWrite(LCD_Clear);
                            887 ;	genCall
   0101 75 82 01            888 	mov	dpl,#0x01
                            889 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0104 02s00r00            890 	ljmp	_LCD_InstructionWrite
                            891 ;
                            892 ;------------------------------------------------------------
                            893 ;Allocation info for local variables in function 'LCD_gotoaddr'
                            894 ;------------------------------------------------------------
                            895 ;addr                      Allocated with name '_LCD_gotoaddr_addr_1_1'
                            896 ;------------------------------------------------------------
                            897 ;	LCD.c:126: void LCD_gotoaddr(unsigned char addr){
                            898 ;	-----------------------------------------
                            899 ;	 function LCD_gotoaddr
                            900 ;	-----------------------------------------
   0107                     901 _LCD_gotoaddr:
                            902 ;	genReceive
   0107 E5 82               903 	mov	a,dpl
   0109 90s00r05            904 	mov	dptr,#_LCD_gotoaddr_addr_1_1
   010C F0                  905 	movx	@dptr,a
                            906 ;	LCD.c:128: if (addr > 128){
                            907 ;	genAssign
   010D 90s00r05            908 	mov	dptr,#_LCD_gotoaddr_addr_1_1
   0110 E0                  909 	movx	a,@dptr
                            910 ;	genCmpGt
                            911 ;	genCmp
                            912 ;	genIfxJump
                            913 ;	Peephole 108.a	removed ljmp by inverse jump logic
                            914 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0111 FA                  915 	mov  r2,a
                            916 ;	Peephole 177.a	removed redundant mov
   0112 24 7F               917 	add	a,#0xff - 0x80
   0114 50 01               918 	jnc	00102$
                            919 ;	Peephole 300	removed redundant label 00106$
                            920 ;	LCD.c:129: return;
                            921 ;	genRet
                            922 ;	Peephole 112.b	changed ljmp to sjmp
                            923 ;	Peephole 251.b	replaced sjmp to ret with ret
   0116 22                  924 	ret
   0117                     925 00102$:
                            926 ;	LCD.c:131: LCD_Busywait();
                            927 ;	genCall
   0117 C0 02               928 	push	ar2
   0119 12s00rC9            929 	lcall	_LCD_Busywait
   011C D0 02               930 	pop	ar2
                            931 ;	LCD.c:132: RW = WRITE;
                            932 ;	genAssign
   011E C2 94               933 	clr	_P1_4
                            934 ;	LCD.c:133: RS = INSTRUCTION;
                            935 ;	genAssign
   0120 C2 95               936 	clr	_P1_5
                            937 ;	LCD.c:134: *LCD_Addr = (0x01 << 7) | addr;
                            938 ;	genAssign
   0122 90s00r00            939 	mov	dptr,#_LCD_Addr
   0125 E4                  940 	clr	a
   0126 93                  941 	movc	a,@a+dptr
   0127 FB                  942 	mov	r3,a
   0128 74 01               943 	mov	a,#0x01
   012A 93                  944 	movc	a,@a+dptr
   012B FC                  945 	mov	r4,a
                            946 ;	genOr
   012C 43 02 80            947 	orl	ar2,#0x80
                            948 ;	genPointerSet
                            949 ;     genFarPointerSet
   012F 8B 82               950 	mov	dpl,r3
   0131 8C 83               951 	mov	dph,r4
   0133 EA                  952 	mov	a,r2
   0134 F0                  953 	movx	@dptr,a
                            954 ;	Peephole 300	removed redundant label 00103$
   0135 22                  955 	ret
                            956 ;------------------------------------------------------------
                            957 ;Allocation info for local variables in function 'LCD_gotoxy'
                            958 ;------------------------------------------------------------
                            959 ;col                       Allocated with name '_LCD_gotoxy_PARM_2'
                            960 ;row                       Allocated with name '_LCD_gotoxy_row_1_1'
                            961 ;------------------------------------------------------------
                            962 ;	LCD.c:141: void LCD_gotoxy(unsigned char row, unsigned char col){
                            963 ;	-----------------------------------------
                            964 ;	 function LCD_gotoxy
                            965 ;	-----------------------------------------
   0136                     966 _LCD_gotoxy:
                            967 ;	genReceive
   0136 E5 82               968 	mov	a,dpl
   0138 90s00r07            969 	mov	dptr,#_LCD_gotoxy_row_1_1
   013B F0                  970 	movx	@dptr,a
                            971 ;	LCD.c:142: if (row > 3 || col > 0x0F){
                            972 ;	genAssign
   013C 90s00r07            973 	mov	dptr,#_LCD_gotoxy_row_1_1
   013F E0                  974 	movx	a,@dptr
                            975 ;	genCmpGt
                            976 ;	genCmp
                            977 ;	genIfxJump
                            978 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0140 FA                  979 	mov  r2,a
                            980 ;	Peephole 177.a	removed redundant mov
   0141 24 FC               981 	add	a,#0xff - 0x03
                            982 ;	Peephole 112.b	changed ljmp to sjmp
                            983 ;	Peephole 160.a	removed sjmp by inverse jump logic
   0143 40 09               984 	jc	00101$
                            985 ;	Peephole 300	removed redundant label 00107$
                            986 ;	genAssign
   0145 90s00r06            987 	mov	dptr,#_LCD_gotoxy_PARM_2
   0148 E0                  988 	movx	a,@dptr
                            989 ;	genCmpGt
                            990 ;	genCmp
                            991 ;	genIfxJump
                            992 ;	Peephole 108.a	removed ljmp by inverse jump logic
                            993 ;	Peephole 132.b	optimized genCmpGt by inverse logic (acc differs)
   0149 FB                  994 	mov  r3,a
                            995 ;	Peephole 177.a	removed redundant mov
   014A 24 F0               996 	add	a,#0xff - 0x0F
   014C 50 01               997 	jnc	00102$
                            998 ;	Peephole 300	removed redundant label 00108$
   014E                     999 00101$:
                           1000 ;	LCD.c:143: return;
                           1001 ;	genRet
                           1002 ;	Peephole 112.b	changed ljmp to sjmp
                           1003 ;	Peephole 251.b	replaced sjmp to ret with ret
   014E 22                 1004 	ret
   014F                    1005 00102$:
                           1006 ;	LCD.c:145: LCD_gotoaddr(AddrMap[row][col]);
                           1007 ;	genLeftShift
                           1008 ;	genLeftShiftLiteral
                           1009 ;	genlshOne
   014F EA                 1010 	mov	a,r2
   0150 C4                 1011 	swap	a
   0151 54 F0              1012 	anl	a,#0xf0
                           1013 ;	genPlus
                           1014 ;	Peephole 177.b	removed redundant mov
                           1015 ;	Peephole 215	removed some moves
   0153 24r02              1016 	add	a,#_AddrMap
   0155 FA                 1017 	mov	r2,a
                           1018 ;	Peephole 181	changed mov to clr
   0156 E4                 1019 	clr	a
   0157 34s00              1020 	addc	a,#(_AddrMap >> 8)
   0159 FC                 1021 	mov	r4,a
                           1022 ;	genPlus
                           1023 ;	Peephole 236.g	used r3 instead of ar3
   015A EB                 1024 	mov	a,r3
                           1025 ;	Peephole 236.a	used r2 instead of ar2
   015B 2A                 1026 	add	a,r2
   015C F5 82              1027 	mov	dpl,a
                           1028 ;	Peephole 181	changed mov to clr
   015E E4                 1029 	clr	a
                           1030 ;	Peephole 236.b	used r4 instead of ar4
   015F 3C                 1031 	addc	a,r4
   0160 F5 83              1032 	mov	dph,a
                           1033 ;	genPointerGet
                           1034 ;	genCodePointerGet
   0162 E4                 1035 	clr	a
   0163 93                 1036 	movc	a,@a+dptr
                           1037 ;	genCall
   0164 FA                 1038 	mov	r2,a
                           1039 ;	Peephole 244.c	loading dpl from a instead of r2
   0165 F5 82              1040 	mov	dpl,a
                           1041 ;	Peephole 253.b	replaced lcall/ret with ljmp
   0167 02s01r07           1042 	ljmp	_LCD_gotoaddr
                           1043 ;
                           1044 ;------------------------------------------------------------
                           1045 ;Allocation info for local variables in function 'LCD_Putch'
                           1046 ;------------------------------------------------------------
                           1047 ;cc                        Allocated with name '_LCD_Putch_cc_1_1'
                           1048 ;------------------------------------------------------------
                           1049 ;	LCD.c:153: void LCD_Putch(char cc){
                           1050 ;	-----------------------------------------
                           1051 ;	 function LCD_Putch
                           1052 ;	-----------------------------------------
   016A                    1053 _LCD_Putch:
                           1054 ;	genReceive
   016A E5 82              1055 	mov	a,dpl
   016C 90s00r08           1056 	mov	dptr,#_LCD_Putch_cc_1_1
   016F F0                 1057 	movx	@dptr,a
                           1058 ;	LCD.c:154: LCD_Busywait();
                           1059 ;	genCall
   0170 12s00rC9           1060 	lcall	_LCD_Busywait
                           1061 ;	LCD.c:155: LCD_DataWrite(cc);
                           1062 ;	genAssign
   0173 90s00r08           1063 	mov	dptr,#_LCD_Putch_cc_1_1
   0176 E0                 1064 	movx	a,@dptr
                           1065 ;	genCall
   0177 FA                 1066 	mov	r2,a
                           1067 ;	Peephole 244.c	loading dpl from a instead of r2
   0178 F5 82              1068 	mov	dpl,a
                           1069 ;	Peephole 253.b	replaced lcall/ret with ljmp
   017A 02s00r1F           1070 	ljmp	_LCD_DataWrite
                           1071 ;
                           1072 ;------------------------------------------------------------
                           1073 ;Allocation info for local variables in function 'LCD_Putstr'
                           1074 ;------------------------------------------------------------
                           1075 ;ss                        Allocated with name '_LCD_Putstr_ss_1_1'
                           1076 ;addr                      Allocated with name '_LCD_Putstr_addr_1_1'
                           1077 ;------------------------------------------------------------
                           1078 ;	LCD.c:164: void LCD_Putstr(char *ss){
                           1079 ;	-----------------------------------------
                           1080 ;	 function LCD_Putstr
                           1081 ;	-----------------------------------------
   017D                    1082 _LCD_Putstr:
                           1083 ;	genReceive
   017D AA F0              1084 	mov	r2,b
   017F AB 83              1085 	mov	r3,dph
   0181 E5 82              1086 	mov	a,dpl
   0183 90s00r09           1087 	mov	dptr,#_LCD_Putstr_ss_1_1
   0186 F0                 1088 	movx	@dptr,a
   0187 A3                 1089 	inc	dptr
   0188 EB                 1090 	mov	a,r3
   0189 F0                 1091 	movx	@dptr,a
   018A A3                 1092 	inc	dptr
   018B EA                 1093 	mov	a,r2
   018C F0                 1094 	movx	@dptr,a
                           1095 ;	LCD.c:166: while(*ss){
                           1096 ;	genAssign
   018D 90s00r09           1097 	mov	dptr,#_LCD_Putstr_ss_1_1
   0190 E0                 1098 	movx	a,@dptr
   0191 FA                 1099 	mov	r2,a
   0192 A3                 1100 	inc	dptr
   0193 E0                 1101 	movx	a,@dptr
   0194 FB                 1102 	mov	r3,a
   0195 A3                 1103 	inc	dptr
   0196 E0                 1104 	movx	a,@dptr
   0197 FC                 1105 	mov	r4,a
   0198                    1106 00107$:
                           1107 ;	genPointerGet
                           1108 ;	genGenPointerGet
   0198 8A 82              1109 	mov	dpl,r2
   019A 8B 83              1110 	mov	dph,r3
   019C 8C F0              1111 	mov	b,r4
   019E 12s00r00           1112 	lcall	__gptrget
                           1113 ;	genIfx
   01A1 FD                 1114 	mov	r5,a
                           1115 ;	Peephole 105	removed redundant mov
                           1116 ;	genIfxJump
   01A2 70 01              1117 	jnz	00118$
                           1118 ;	Peephole 251.a	replaced ljmp to ret with ret
   01A4 22                 1119 	ret
   01A5                    1120 00118$:
                           1121 ;	LCD.c:167: LCD_Putch(*ss);
                           1122 ;	genCall
   01A5 8D 82              1123 	mov	dpl,r5
   01A7 C0 02              1124 	push	ar2
   01A9 C0 03              1125 	push	ar3
   01AB C0 04              1126 	push	ar4
   01AD 12s01r6A           1127 	lcall	_LCD_Putch
   01B0 D0 04              1128 	pop	ar4
   01B2 D0 03              1129 	pop	ar3
   01B4 D0 02              1130 	pop	ar2
                           1131 ;	LCD.c:168: ss++;
                           1132 ;	genPlus
                           1133 ;     genPlusIncr
   01B6 0A                 1134 	inc	r2
   01B7 BA 00 01           1135 	cjne	r2,#0x00,00119$
   01BA 0B                 1136 	inc	r3
   01BB                    1137 00119$:
                           1138 ;	genAssign
   01BB 90s00r09           1139 	mov	dptr,#_LCD_Putstr_ss_1_1
   01BE EA                 1140 	mov	a,r2
   01BF F0                 1141 	movx	@dptr,a
   01C0 A3                 1142 	inc	dptr
   01C1 EB                 1143 	mov	a,r3
   01C2 F0                 1144 	movx	@dptr,a
   01C3 A3                 1145 	inc	dptr
   01C4 EC                 1146 	mov	a,r4
   01C5 F0                 1147 	movx	@dptr,a
                           1148 ;	LCD.c:170: LCD_Busywait();
                           1149 ;	genCall
   01C6 C0 02              1150 	push	ar2
   01C8 C0 03              1151 	push	ar3
   01CA C0 04              1152 	push	ar4
   01CC 12s00rC9           1153 	lcall	_LCD_Busywait
   01CF D0 04              1154 	pop	ar4
   01D1 D0 03              1155 	pop	ar3
   01D3 D0 02              1156 	pop	ar2
                           1157 ;	LCD.c:171: RW = READ;
                           1158 ;	genAssign
   01D5 D2 94              1159 	setb	_P1_4
                           1160 ;	LCD.c:172: RS = INSTRUCTION;
                           1161 ;	genAssign
   01D7 C2 95              1162 	clr	_P1_5
                           1163 ;	LCD.c:173: addr = *LCD_Addr & 0x7F;    //Mask off the busy bit, even though it should always be 0 here
                           1164 ;	genAssign
   01D9 90s00r00           1165 	mov	dptr,#_LCD_Addr
   01DC E4                 1166 	clr	a
   01DD 93                 1167 	movc	a,@a+dptr
   01DE FD                 1168 	mov	r5,a
   01DF 74 01              1169 	mov	a,#0x01
   01E1 93                 1170 	movc	a,@a+dptr
   01E2 FE                 1171 	mov	r6,a
                           1172 ;	genPointerGet
                           1173 ;	genFarPointerGet
   01E3 8D 82              1174 	mov	dpl,r5
   01E5 8E 83              1175 	mov	dph,r6
   01E7 E0                 1176 	movx	a,@dptr
   01E8 FD                 1177 	mov	r5,a
                           1178 ;	genAnd
   01E9 53 05 7F           1179 	anl	ar5,#0x7F
                           1180 ;	LCD.c:174: switch (addr){
                           1181 ;	genCmpEq
                           1182 ;	gencjneshort
   01EC BD 10 02           1183 	cjne	r5,#0x10,00120$
                           1184 ;	Peephole 112.b	changed ljmp to sjmp
   01EF 80 0F              1185 	sjmp	00101$
   01F1                    1186 00120$:
                           1187 ;	genCmpEq
                           1188 ;	gencjneshort
   01F1 BD 24 02           1189 	cjne	r5,#0x24,00121$
                           1190 ;	Peephole 112.b	changed ljmp to sjmp
   01F4 80 34              1191 	sjmp	00103$
   01F6                    1192 00121$:
                           1193 ;	genCmpEq
                           1194 ;	gencjneshort
   01F6 BD 50 02           1195 	cjne	r5,#0x50,00122$
                           1196 ;	Peephole 112.b	changed ljmp to sjmp
   01F9 80 1A              1197 	sjmp	00102$
   01FB                    1198 00122$:
                           1199 ;	genCmpEq
                           1200 ;	gencjneshort
                           1201 ;	Peephole 112.b	changed ljmp to sjmp
                           1202 ;	LCD.c:175: case 0x10:
                           1203 ;	Peephole 112.b	changed ljmp to sjmp
                           1204 ;	Peephole 198.b	optimized misc jump sequence
   01FB BD 64 9A           1205 	cjne	r5,#0x64,00107$
   01FE 80 3F              1206 	sjmp	00104$
                           1207 ;	Peephole 300	removed redundant label 00123$
   0200                    1208 00101$:
                           1209 ;	LCD.c:176: LCD_gotoaddr(0x40);
                           1210 ;	genCall
   0200 75 82 40           1211 	mov	dpl,#0x40
   0203 C0 02              1212 	push	ar2
   0205 C0 03              1213 	push	ar3
   0207 C0 04              1214 	push	ar4
   0209 12s01r07           1215 	lcall	_LCD_gotoaddr
   020C D0 04              1216 	pop	ar4
   020E D0 03              1217 	pop	ar3
   0210 D0 02              1218 	pop	ar2
                           1219 ;	LCD.c:177: break;
   0212 02s01r98           1220 	ljmp	00107$
                           1221 ;	LCD.c:178: case 0x50:
   0215                    1222 00102$:
                           1223 ;	LCD.c:179: LCD_gotoaddr(0x10);
                           1224 ;	genCall
   0215 75 82 10           1225 	mov	dpl,#0x10
   0218 C0 02              1226 	push	ar2
   021A C0 03              1227 	push	ar3
   021C C0 04              1228 	push	ar4
   021E 12s01r07           1229 	lcall	_LCD_gotoaddr
   0221 D0 04              1230 	pop	ar4
   0223 D0 03              1231 	pop	ar3
   0225 D0 02              1232 	pop	ar2
                           1233 ;	LCD.c:180: break;
   0227 02s01r98           1234 	ljmp	00107$
                           1235 ;	LCD.c:181: case 0x24:
   022A                    1236 00103$:
                           1237 ;	LCD.c:182: LCD_gotoaddr(0x50);
                           1238 ;	genCall
   022A 75 82 50           1239 	mov	dpl,#0x50
   022D C0 02              1240 	push	ar2
   022F C0 03              1241 	push	ar3
   0231 C0 04              1242 	push	ar4
   0233 12s01r07           1243 	lcall	_LCD_gotoaddr
   0236 D0 04              1244 	pop	ar4
   0238 D0 03              1245 	pop	ar3
   023A D0 02              1246 	pop	ar2
                           1247 ;	LCD.c:183: break;
   023C 02s01r98           1248 	ljmp	00107$
                           1249 ;	LCD.c:184: case 0x64:
   023F                    1250 00104$:
                           1251 ;	LCD.c:185: return;
                           1252 ;	genRet
                           1253 ;	LCD.c:188: }
                           1254 ;	Peephole 300	removed redundant label 00110$
   023F 22                 1255 	ret
                           1256 ;------------------------------------------------------------
                           1257 ;Allocation info for local variables in function 'LCD_Init'
                           1258 ;------------------------------------------------------------
                           1259 ;------------------------------------------------------------
                           1260 ;	LCD.c:197: void LCD_Init(void){
                           1261 ;	-----------------------------------------
                           1262 ;	 function LCD_Init
                           1263 ;	-----------------------------------------
   0240                    1264 _LCD_Init:
                           1265 ;	LCD.c:198: LCD_Busywait();
                           1266 ;	genCall
   0240 12s00rC9           1267 	lcall	_LCD_Busywait
                           1268 ;	LCD.c:199: LCD_InstructionWrite(LCD_SystemSet);
                           1269 ;	genCall
   0243 75 82 38           1270 	mov	dpl,#0x38
   0246 12s00r00           1271 	lcall	_LCD_InstructionWrite
                           1272 ;	LCD.c:200: LCD_Busywait();
                           1273 ;	genCall
   0249 12s00rC9           1274 	lcall	_LCD_Busywait
                           1275 ;	LCD.c:201: LCD_InstructionWrite(LCD_DisplayOn);
                           1276 ;	genCall
   024C 75 82 0F           1277 	mov	dpl,#0x0F
                           1278 ;	Peephole 253.b	replaced lcall/ret with ljmp
   024F 02s00r00           1279 	ljmp	_LCD_InstructionWrite
                           1280 ;
                           1281 ;------------------------------------------------------------
                           1282 ;Allocation info for local variables in function 'LCD_Test'
                           1283 ;------------------------------------------------------------
                           1284 ;------------------------------------------------------------
                           1285 ;	LCD.c:208: void LCD_Test(void){
                           1286 ;	-----------------------------------------
                           1287 ;	 function LCD_Test
                           1288 ;	-----------------------------------------
   0252                    1289 _LCD_Test:
                           1290 ;	LCD.c:211: LCD_Busywait();
                           1291 ;	genCall
   0252 12s00rC9           1292 	lcall	_LCD_Busywait
                           1293 ;	LCD.c:213: LCD_InstructionWrite(LCD_Clear);
                           1294 ;	genCall
   0255 75 82 01           1295 	mov	dpl,#0x01
   0258 12s00r00           1296 	lcall	_LCD_InstructionWrite
                           1297 ;	LCD.c:214: LCD_Busywait();
                           1298 ;	genCall
   025B 12s00rC9           1299 	lcall	_LCD_Busywait
                           1300 ;	LCD.c:216: LCD_gotoxy(0,0);
                           1301 ;	genAssign
   025E 90s00r06           1302 	mov	dptr,#_LCD_gotoxy_PARM_2
                           1303 ;	Peephole 181	changed mov to clr
   0261 E4                 1304 	clr	a
   0262 F0                 1305 	movx	@dptr,a
                           1306 ;	genCall
   0263 75 82 00           1307 	mov	dpl,#0x00
   0266 12s01r36           1308 	lcall	_LCD_gotoxy
                           1309 ;	LCD.c:217: LCD_Putstr("abcdefghijklnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz12345678987654321");
                           1310 ;	genCall
                           1311 ;	Peephole 182.a	used 16 bit load of DPTR
   0269 90s00r62           1312 	mov	dptr,#__str_0
   026C 75 F0 80           1313 	mov	b,#0x80
                           1314 ;	Peephole 253.b	replaced lcall/ret with ljmp
   026F 02s01r7D           1315 	ljmp	_LCD_Putstr
                           1316 ;
                           1317 	.area CSEG    (CODE)
                           1318 	.area CONST   (CODE)
   0000                    1319 _LCD_Addr:
   0000 00 E0              1320 	.byte #0x00,#0xE0
   0002                    1321 _AddrMap:
   0002 00                 1322 	.db #0x00
   0003 01                 1323 	.db #0x01
   0004 02                 1324 	.db #0x02
   0005 03                 1325 	.db #0x03
   0006 04                 1326 	.db #0x04
   0007 05                 1327 	.db #0x05
   0008 06                 1328 	.db #0x06
   0009 07                 1329 	.db #0x07
   000A 08                 1330 	.db #0x08
   000B 09                 1331 	.db #0x09
   000C 0A                 1332 	.db #0x0A
   000D 0B                 1333 	.db #0x0B
   000E 0C                 1334 	.db #0x0C
   000F 0D                 1335 	.db #0x0D
   0010 0E                 1336 	.db #0x0E
   0011 0F                 1337 	.db #0x0F
   0012 40                 1338 	.db #0x40
   0013 41                 1339 	.db #0x41
   0014 42                 1340 	.db #0x42
   0015 43                 1341 	.db #0x43
   0016 44                 1342 	.db #0x44
   0017 45                 1343 	.db #0x45
   0018 46                 1344 	.db #0x46
   0019 47                 1345 	.db #0x47
   001A 48                 1346 	.db #0x48
   001B 49                 1347 	.db #0x49
   001C 4A                 1348 	.db #0x4A
   001D 4B                 1349 	.db #0x4B
   001E 4C                 1350 	.db #0x4C
   001F 4D                 1351 	.db #0x4D
   0020 4E                 1352 	.db #0x4E
   0021 4F                 1353 	.db #0x4F
   0022 10                 1354 	.db #0x10
   0023 11                 1355 	.db #0x11
   0024 12                 1356 	.db #0x12
   0025 13                 1357 	.db #0x13
   0026 14                 1358 	.db #0x14
   0027 15                 1359 	.db #0x15
   0028 16                 1360 	.db #0x16
   0029 17                 1361 	.db #0x17
   002A 18                 1362 	.db #0x18
   002B 19                 1363 	.db #0x19
   002C 1A                 1364 	.db #0x1A
   002D 1B                 1365 	.db #0x1B
   002E 1C                 1366 	.db #0x1C
   002F 1D                 1367 	.db #0x1D
   0030 1E                 1368 	.db #0x1E
   0031 1F                 1369 	.db #0x1F
   0032 50                 1370 	.db #0x50
   0033 51                 1371 	.db #0x51
   0034 52                 1372 	.db #0x52
   0035 53                 1373 	.db #0x53
   0036 54                 1374 	.db #0x54
   0037 55                 1375 	.db #0x55
   0038 56                 1376 	.db #0x56
   0039 57                 1377 	.db #0x57
   003A 58                 1378 	.db #0x58
   003B 59                 1379 	.db #0x59
   003C 5A                 1380 	.db #0x5A
   003D 5B                 1381 	.db #0x5B
   003E 5C                 1382 	.db #0x5C
   003F 5D                 1383 	.db #0x5D
   0040 5E                 1384 	.db #0x5E
   0041 5F                 1385 	.db #0x5F
   0042                    1386 _ASCII_lookup:
   0042 30 00              1387 	.byte #0x30,#0x00
   0044 31 00              1388 	.byte #0x31,#0x00
   0046 32 00              1389 	.byte #0x32,#0x00
   0048 33 00              1390 	.byte #0x33,#0x00
   004A 34 00              1391 	.byte #0x34,#0x00
   004C 35 00              1392 	.byte #0x35,#0x00
   004E 36 00              1393 	.byte #0x36,#0x00
   0050 37 00              1394 	.byte #0x37,#0x00
   0052 38 00              1395 	.byte #0x38,#0x00
   0054 39 00              1396 	.byte #0x39,#0x00
   0056 41 00              1397 	.byte #0x41,#0x00
   0058 42 00              1398 	.byte #0x42,#0x00
   005A 43 00              1399 	.byte #0x43,#0x00
   005C 44 00              1400 	.byte #0x44,#0x00
   005E 45 00              1401 	.byte #0x45,#0x00
   0060 46 00              1402 	.byte #0x46,#0x00
   0062                    1403 __str_0:
   0062 61 62 63 64 65 66  1404 	.ascii "abcdefghijklnopqrstuvwxyz123456789abcdefghijklmnopqrstuvwxyz"
        67 68 69 6A 6B 6C
        6E 6F 70 71 72 73
        74 75 76 77 78 79
        7A 31 32 33 34 35
        36 37 38 39 61 62
        63 64 65 66 67 68
        69 6A 6B 6C 6D 6E
        6F 70 71 72 73 74
        75 76 77 78 79 7A
   009E 31 32 33 34 35 36  1405 	.ascii "12345678987654321"
        37 38 39 38 37 36
        35 34 33 32 31
   00AF 00                 1406 	.db 0x00
                           1407 	.area XINIT   (CODE)
